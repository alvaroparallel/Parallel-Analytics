{"version":3,"sources":["assets/images/logo.svg","components/header/index.jsx","data/usePrevius.jsx","components/crowdloanList/index.jsx","App.js","index.js","data/parachains.jsx"],"names":["Header","src","logo","alt","usePrevious","value","ref","useRef","useEffect","current","CrowdloanList","data","raising","contrib","parachain","Parachains","tvl","marketshare","market","reduce","sum","parseInt","raised","share","total","porcent","toFixed","className","toLocaleString","style","width","maxWidth","marginLeft","textAlign","viewBox","cx","cy","r","strokeWidth","fill","transform","strokeDasharray","strokeDashoffset","x","y","dx","textAnchor","Math","abs","Number","sort","a","b","filter","paraId","map","index","id","t","i","paraid","icon","name","g","graph","App","useState","setRaised","contributions","setContributions","setTvl","getRaised","fetch","res","json","responseJson","getContributions","getTvl","totalValue","load","setInterval","raise","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1025275a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f948a1cf.svg\";","import React from \"react\";\nimport logo from '../../assets/images/logo.svg';\n\nexport default function Header() {\n  return (\n    <header>\n      <img src={logo} alt=\"Parallel Analytics\"/>\n    </header>\n  );\n}","import { useRef, useEffect } from 'react'\nconst usePrevious = value => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n\nexport default usePrevious","import React from 'react';\nimport usePrevious from \"../../data/usePrevius.jsx\"\nimport Parachains from '../../data/parachains.jsx';\n\n\nexport default function CrowdloanList(data) {\n\n  const raising     = data['raise']\n  const contrib     = data['contributions']\n  const parachain   = Parachains.parachain;\n  const tvl         = data['tvl']; \n  const marketshare = [{}];\n  const oldTvl      =  usePrevious(tvl);\n\n  if(raising && contrib) {\n    const market = raising.reduce(function(sum, current) {\n        return parseInt(sum) + parseInt(current.raised);\n    }, 0);\n    const share = contrib.reduce(function(sum, current) {\n      return parseInt(sum) + parseInt(current.total);\n  }, 0)\n\n    marketshare.market = market;\n    marketshare.share  = share;\n    marketshare.porcent = ((marketshare.share/marketshare.market)*100).toFixed(2);\n  }  \n\n\n\n  return (\n    <>\n    <div>\n\n    </div>\n      <div className=\"flex\">\n        <div className=\"box tvl\">\n          <h3> Total Value Locked</h3>\n          <p className=\"big\"> \n            { !tvl ? 'Calculating' : \n              '$' + parseInt(tvl.toFixed(2)).toLocaleString(\"en-US\")\n            } \n\n   \n          </p>\n        </div>\n        <div className=\"box\" style={{width:\"100%\", maxWidth:'375px', marginLeft:'auto', textAlign:'center'}}>\n          <h3>Parallel Share of Total Market</h3>\n          <svg className=\"score\"  viewBox=\"-25 -25 400 400\">\n            <circle className=\"score-empty\" cx=\"175\" cy=\"175\" r=\"175\" strokeWidth=\"25\" fill=\"none\"></circle>\n            <circle className=\"js-circle score-circle\" transform=\"rotate(-90 175 175)\" cx=\"175\" cy=\"175\" r=\"175\" strokeDasharray=\"1100\" \n              strokeDashoffset={ !marketshare.market ? 0 : (1100 * (100 - marketshare.porcent)) / 100} strokeWidth=\"25\" fill=\"none\"></circle>\n            <text className=\"js-text score-text\" x=\"50%\" y=\"45%\" dx=\"-25\" textAnchor=\"middle\">\n              { !marketshare.porcent ? 'calculating' : marketshare.porcent + '%'}\n            </text>\n            <text className=\"js-text score-text small\" x=\"50%\" y=\"55%\" dx=\"-25\" textAnchor=\"middle\">\n            { !marketshare.market ? 'calculating' : \n              (Math.abs(Number(marketshare.share/10000000000)) / 1.0e+6).toFixed(2) + 'm/' + (Math.abs(Number(marketshare.market/10000000000)) / 1.0e+6).toFixed(2) + 'm'  } \n            </text>\n          </svg>      \n        </div>  \n      </div>\n\n      <div className=\"box full\">\n        <h3>Crowdloan by Projects</h3>\n        { !raising ? 'Loading...' : \n          raising.sort((a, b) => b.raised - a.raised).filter(data => data.paraId !== \"2017\").map((index) => {\n            const id = index.paraId,\n                  r  = index.raised,\n                  t  = raising[0].raised;\n          \n            return (\n\n              <div key={id}>\n                <div className=\"flex\">\n                  \n                  {!parachain ? 'Loading...' : parachain.filter(i => i.paraid === id).map(icon => (\n                    <div key={icon} className=\"icon\">\n                      <img src={icon.icon} alt={icon.name} />\n                    </div>\n                  ))}    \n\n                  {!contrib ? 'Loading...' : contrib.filter(g => g.paraId === id).map(graph => (\n                    <>\n\n                      <div className=\"meter\" style={{width: 900*(r/t) }} >\n                        <span style={{width: (graph.total/r)*100 + '%'}}></span>\n                      </div>\n\n                      <div>\n                        {\n                          (Math.abs(Number(r/10000000000)) / 1.0e+6).toFixed(2) + 'M'} | { ((graph.total/r)*100).toFixed(2) + '%' \n                        }\n                      </div>\n                    </>\n                  ))}\n                  \n                </div>\n              </div>\n              \n            )\n         } )\n        }\n      </div>\n\n  \n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport Header         from './components/header'\nimport CrowdloanList  from './components/crowdloanList'\nimport './styles/styles.css'; \n\nfunction App() {\n  const raiseApi          = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot\"\n  const contributionsApi  = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot/contributions\"\n  const tvlApi            = \"https://auction-service-prod.parallel.fi/crowdloan/total-value\"\n\n  const [raised        , setRaised        ] = useState();\n  const [contributions , setContributions ] = useState();\n  const [tvl           , setTvl           ] = useState();\n\n\n  const getRaised = async () => {\n    const res = await fetch(raiseApi);\n    const responseJson = await res.json();\n\n    setRaised(responseJson)\n  }\n\n  const getContributions = async () => {\n    const res = await fetch(contributionsApi);\n    const responseJson = await res.json();\n\n    setContributions(responseJson)\n\n  }\n\nconst getTvl = async () => {\n  const res = await fetch(tvlApi);\n  const responseJson = await res.json();\n  setTvl(responseJson.totalValue)\n}\n  \n  useEffect(()=>{\n    function load() {\n      getRaised();\n      getContributions();\n      getTvl()\n\n    }\n\n    load();\n\n\n      setInterval(() => {\n        load()\n      }, 30000)\n  \n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <CrowdloanList raise={raised} contributions={contributions} tvl={tvl}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = {\n  parachain: [\n    { paraid: '2000', name: 'Acala'                   , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/acala-circle.svg' },\n    { paraid: '2004', name: 'Moonbeam'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/moonbeam.png' },\n    { paraid: '2006', name: 'Astar'                   , icon: 'https://astar.network/images/brand-logo-mark.png' },\n    { paraid: '2012', name: 'Parallel Finance'        , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/fearless-utils/crowdloan/icons/parallel.svg' },\n    { paraid: '2015', name: 'Manta Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/manta.png' },\n    { paraid: '2002', name: 'Clover Network'          , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/clover.svg' },\n    { paraid: '2013', name: 'Litentry'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/litentry.png' },\n    { paraid: '2018', name: 'Litentry'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/subdao.png' },\n    { paraid: '2017', name: '2017'                    , icon: 'https://crowdloan.parallel.fi/static/media/polkadot.7e142f48.svg' },\n    { paraid: '2001', name: 'Bifrost'                 , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/bifrost.svg' },\n    { paraid: '107' , name: 'Centrifuge'              , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/centrifuge.png' },\n    { paraid: '2008', name: 'Crust Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/crust.svg' },\n    { paraid: '108' , name: 'Darwinia Network'        , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/darwinia.png' }\n  ]\n};"],"sourceRoot":""}
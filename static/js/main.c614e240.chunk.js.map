{"version":3,"sources":["assets/images/logo.svg","components/header/index.jsx","data/helpers.jsx","data/globalTvl.jsx","data/share.jsx","components/Logo/index.jsx","components/ProgressBar/index.jsx","components/Dotmarket/index.jsx","assets/images/binance.svg","assets/images/network.svg","assets/images/parallel.svg","components/MarketDominance/index.jsx","components/crowdloanList/index.jsx","App.js","index.js","data/parachains.jsx"],"names":["Header","src","logo","alt","m","value","val","Math","abs","Number","toFixed","n","parseFloat","toLocaleString","Porcent","GlobalTvl","price","dotPrice","useState","tvl","setTvl","dailyVar","setDailyVar","getData","a","fetch","res","json","responseJson","console","log","dates","stats","slice","map","date","i","replace","newArray","item","tvlFinal","_","sum","values","finalfinal","merge","length","useEffect","className","class","ResponsiveContainer","width","height","debounce","AreaChart","data","stroke","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","Tooltip","formatter","Intl","NumberFormat","notation","compactDisplay","format","Area","scaleToFit","type","fill","YAxis","orientation","tickFormatter","Share","vals","share","market","viewBox","cx","cy","r","strokeWidth","transform","strokeDashoffset","porcent","x","y","dx","textAnchor","Logo","icon","name","ProgressBar","w","b","bar","style","Dotmarket","raising","raise","parachain","Parachains","aucitonShare","marketShare","sort","raised","filter","paraId","index","id","paraid","network","MarketDominance","binanceTVL","decimals","bin","datachart","BinancePortcent","paralelPorcent","nonshare","otherMarkets","reduce","current","parseInt","votedAmount","datasets","cutout","borderRadius","borderSkipped","backgroundColor","Binance","Parallel","Networks","CrowdloanList","contrib","contributions","marketshare","binance","other","total","totalValue","t","g","graph","gTotal","rt","App","setRaised","setContributions","setBinance","getRaised","getContributions","getTvl","getBinance","load","setInterval","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c614e240.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f948a1cf.svg\";","import React from \"react\";\nimport logo from '../../assets/images/logo.svg';\n\nexport default function Header() {\n  return (\n    <header>\n      <img src={logo} alt=\"Parallel Analytics\"/>\n    </header>\n  );\n}","export function m (value) {\n  const val = value/10000000000;\n\n    return Math.abs(Number(val)) >= 1.0e+9 ? \n    (Math.abs(Number(val)) / 1.0e+9).toFixed(2) + \"B\"\n    // Six Zeroes for Millions \n    : Math.abs(Number(val)) >= 1.0e+6\n\n    ? (Math.abs(Number(val)) / 1.0e+6).toFixed(2) + \"M\"\n    // Three Zeroes for Thousands\n    : Math.abs(Number(val)) >= 1.0e+3\n\n    ? (Math.abs(Number(val)) / 1.0e+3).toFixed(2) + \"K\"\n\n    : Math.abs(Number(val)).toFixed(2);\n\n}\n\nexport function n (value) {\n  return parseFloat(value.toFixed(2)).toLocaleString(\"en-US\");\n}\n\nexport function Porcent (value) {\n  return (value*100).toFixed(2)\n}","import React, { useEffect, useState } from 'react';\nimport { n } from './helpers.jsx';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport _ from \"lodash\"\n\nexport default function GlobalTvl(price) {\n  let dotPrice = price.price.dotPrice;\n  \n  const [tvl         , setTvl             ] = useState();\n  const [dailyVar    , setDailyVar        ] = useState();  \n  \n  \n  const getData = async () => {\n    const res = await fetch(\"https://auction-service-prod.parallel.fi/crowdloan/statistics/polkadot?fundIds=2000-1muqpuFcWvy1Q3tf9Tek882A6ngz46bWPsV6sWiYccnVjKb-0,2002-14e4GmLj5CccWe9Rant9q6yQro1oysqvKiBiHcpCRoscZ1yY-0,2004-12KHAurRWMFJyxU57S9pQerHsKLCwvWKM1d3dKZVx7gSfkFJ-1,2006-1j5YyEGdcPd9BxkzVNNjKkqdi5f7g3Dd7JMgaGUhsMrZ6dZ-0,2012-15kjdKF4hRbYWzLjovPiohT5pVheXhhk8oKHr3DyTaxF2evd-0\");\n    const responseJson = await res.json();\n\n    console.log(dotPrice)\n    let dates = responseJson.stats.slice(-7).map(function(date, i){\n      return {\n        dates: date.date.replace(', 2021', '')\n      }\n    });\n    \n\n    let newArray = responseJson.stats.slice(-7).map(function(item, i){\n      delete item.date;\n      return item\n    });\n    \n    \n    let tvlFinal = newArray.map(function(item, i){\n      return {\n        value: _.sum(_.values(newArray[i]))*dotPrice \n      }\n    })\n\n    let finalfinal = _.merge(dates, tvlFinal);;\n\n    setTvl(finalfinal)\n    setDailyVar((((tvlFinal[tvlFinal.length - 1].value - tvlFinal[tvlFinal.length - 2].value)/tvlFinal[tvlFinal.length - 1].value)*100).toFixed(2))\n  \n  }\n\n\n  useEffect(()=>{\n    getData()\n  }, [])\n  \n\n \n\n\n\n  return (\n    <>\n\n      <p className=\"big\"> \n       \n        {!tvl ? \"\" :  '$'+ n(parseFloat(tvl[tvl.length - 1].value))} \n\n        <span className=\"variation\">\n          {dailyVar  &&\n              ' +' + dailyVar + '%'\n          }\n          </span>\n      </p>\n      \n      {tvl &&\n        <>\n          <div class=\"globalTvl\">\n            <ResponsiveContainer className=\"crowdloantvl\" width=\"100%\" height={350} debounce={1}>\n              <AreaChart\n                width=\"100%\"\n                height={350}\n                data={tvl}\n                stroke={3}\n                margin={{\n                  top: 10,\n                  right: 0,\n                  left: 30,\n                  bottom: 0,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"1 5\" />\n                <XAxis dataKey=\"dates\" />\n                \n                <Tooltip  formatter={(value) => new Intl.NumberFormat('en', { notation: \"compact\" , compactDisplay: \"short\" }).format(value)} />\n                <Area scaleToFit={true} type=\"monotone\" dataKey=\"value\" stroke=\"#0C3EE3\" fill=\"rgba(12, 62, 227, 0.34)\" />\n                <YAxis orientation=\"right\" tickFormatter={(value) => new Intl.NumberFormat('en', { notation: \"compact\" , compactDisplay: \"short\" }).format(value)} />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n        </>\n      }\n\n    </>\n  )\n}\n\n","import React from 'react';\nimport { m } from './helpers.jsx';\n\nexport default function Share(vals) {\n  const price     = vals?.price?.dotPrice\n  const share     = vals.market\n  return (\n    <>\n        <svg className=\"score\"  viewBox=\"-25 -25 400 400\">\n          <circle className=\"score-empty\" cx=\"175\" cy=\"175\" r=\"175\" strokeWidth=\"25\" fill=\"none\"></circle>\n          <circle className=\"js-circle score-circle\" transform=\"rotate(-90 175 175)\" cx=\"175\" cy=\"175\" r=\"175\" strokeDasharray=\"1100\" \n            strokeDashoffset={ !share.market ? 0 : (1100 * (100 - share.porcent)) / 100} strokeWidth=\"25\" fill=\"none\"></circle>\n          <text className=\"js-text score-text\" x=\"50%\" y=\"45%\" dx=\"-25\" textAnchor=\"middle\">\n            { !share.porcent ? 'calculating' : share.porcent + '%'}\n          </text>\n          <text className=\"js-text score-text small\" x=\"50%\" y=\"55%\" dx=\"-25\" textAnchor=\"middle\">\n          { !share.market  ? 'calculating' : \n            'of ' + m(share.market*price)  \n          }\n          </text>\n        </svg>  \n    </>\n  )\n}","import React from 'react';\n\nexport default function Logo(src) {\n  const icon = src.src;\n  return (\n    <>\n      <div key={icon} className=\"icon\">\n        <img src={icon.icon} alt={icon.name} />\n      </div>\n    </>\n  )\n}","import React from 'react';\n\nexport default function ProgressBar(data) {\n  const w = data.width,\n        b = data.bar;\n  return (\n    <>\n      <div className=\"meter\" style={{width: 800*w }} >\n        <span style={{width: b*100 + '%'}}></span>\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport Parachains from '../../data/parachains.jsx';\nimport { m, Porcent } from '../../data/helpers.jsx';\nimport Logo from '../../components/Logo';\n\nexport default function Dotmarket(data) {\n  const raising       = data.raise;\n  const parachain     = Parachains.parachain;\n  const aucitonShare  = data.marketShare;\n  const supply        = '1103303471';\n  return (\n    <>\n        <div>\n          <div className=\"network-header flex justify\">\n            <h4 className=\"network-name\">PROJECT</h4>\n            <h4 className=\"network-cap\">DOT</h4>\n            <h4 className=\"network-auction\">% Auction</h4>\n            <h4 className=\"network-total\">% Total</h4>\n          </div>\n          <div>\n            { \n              !raising ? \"Getting Data\" : \n              raising.sort((a, b) => b.raised - a.raised).filter(data => data.paraId !== \"2017\" && data.paraId !== \"2003\" && data.paraId !== \"2021\" ).map((index) => {\n              \n              const id = index.paraId,\n                    r  = index.raised,\n                    t  = raising[0].raised;\n              return (\n                <>\n                  <div key={id} className=\"network flex justify\">\n                    {!parachain ? 'Loading...' : parachain.filter(i => i.paraid === id).map(network => (\n                      <div key={id} className=\"network-name\"><Logo src={network}/> <span> {network.name} </span></div>\n                    ))}    \n                    \n                    <p className=\"network-cap\">{m(r)}</p>\n                    <p className=\"network-auction\">{ Porcent(r/aucitonShare) + '%'}</p>\n                    <p className=\"network-total\">{ Porcent((r/10000000000)/supply) + '%'}</p>\n                  </div>\n                </>\n              )\n            })\n          }\n\n          </div>\n        </div>\n    </>\n  )\n}","export default __webpack_public_path__ + \"static/media/binance.d8c61230.svg\";","export default __webpack_public_path__ + \"static/media/network.576efa45.svg\";","export default __webpack_public_path__ + \"static/media/parallel.5a293074.svg\";","import React from 'react';\nimport { m , Porcent } from '../../data/helpers.jsx';\nimport Binance from '../../assets/images/binance.svg';\nimport Networks from '../../assets/images/network.svg';\nimport Parallel from '../../assets/images/parallel.svg';\nimport { Doughnut } from 'react-chartjs-2';\n\n\n\n\nexport default function MarketDominance(data) {\n  const binanceTVL = data?.data;\n  const decimals   = 10000000000;\n  const share      = data?.share?.share;\n  const market     = data?.share.market/decimals; \n\n\n  \n  let bin = false;\n  let datachart = false;\n  let BinancePortcent = false;\n  let paralelPorcent  = false;\n  let nonshare = false;\n  let otherMarkets = false;\n  if(binanceTVL) {\n  bin = binanceTVL.reduce(function(sum, current) {\n    return parseInt(sum) + parseInt(current.votedAmount);\n  }, 0);\n\n\n  BinancePortcent = Porcent(bin/market);\n  paralelPorcent  = Porcent((share/decimals)/market);\n  nonshare        =  parseFloat(BinancePortcent) + parseFloat(paralelPorcent);\n  otherMarkets    = m(((market - bin) - (share/decimals))*decimals)\n  datachart = {\n \n    datasets: [\n      {\n        data: [BinancePortcent , paralelPorcent, 100-nonshare ],\n        cutout:90,\n        borderRadius: 100,\n        borderSkipped: true,\n        backgroundColor: [\n          ' #f4c349',\n          '#0c3ee3',\n          ' #f8f8f8',\n\n        ]\n      },\n    ],\n  };\n  \n\n\n}\n\n  return (  \n    <>\n    <div className=\"dominance\">\n      { !datachart ? '' :\n      <Doughnut data={datachart} />\n      }\n      <div>\n        <img className=\"logo\" src={Binance} alt=\"Binance\" />\n        <p>Binance <strong>{!bin ? 'loading' : m(bin*decimals) + ' ('+ BinancePortcent +'%)' }  </strong></p>\n         \n      </div>\n      <div>\n        <img className=\"logo\" src={Parallel} alt=\"Binance\" />\n        <p>Parallel Finance <strong>{ !share ? 'getting' : m(share) + ' ('+ paralelPorcent +'%)'}</strong></p>\n        \n      </div>\n      <div>\n        <img className=\"logo\" src={Networks} alt=\"Binance\" />\n        <p>Others <strong>{ !share ? 'getting' : otherMarkets + ' ('+ (100-nonshare).toFixed(2) +'%)'}</strong></p>\n      </div>     \n    </div>\n\n    </>\n  )\n}\n\n\n","import React from 'react';\nimport Parachains from '../../data/parachains.jsx';\nimport { n, m , Porcent } from '../../data/helpers.jsx';\nimport GlobalTvl from '../../data/globalTvl.jsx';\nimport Share from '../../data/share.jsx';\nimport Logo from '../../components/Logo';\nimport ProgressBar from '../../components/ProgressBar';\nimport Dotmarket from '../../components/Dotmarket';\nimport MarketDominance from '../../components/MarketDominance'\n\nexport default function CrowdloanList(data) {\n\n  const raising     = data?.raise\n  const contrib     = data?.contributions\n  const parachain   = Parachains.parachain;\n  const tvl         = data?.tvl\n  const marketshare = [{}];\n  const binance     = data?.other?.data;\n\n  if(raising && contrib) {\n    const market = raising.reduce(function(sum, current) {\n      return parseInt(sum) + parseInt(current.raised);\n    }, 0);\n    const share = contrib.reduce(function(sum, current) {\n      return parseInt(sum) + parseInt(current.total);\n  }, 0)\n    marketshare.market = market;\n    marketshare.share  = share;\n    marketshare.porcent = Porcent(marketshare.share/marketshare.market);\n  }  \n\n\n\n  return (\n    <>\n    <div>\n      \n    </div>\n      <div className=\"flex\">\n        <div className=\"box tvl\">\n            <h3> Total Value Locked </h3>\n            {tvl &&\n              <p class=\"giant\">\n                ${ n(tvl.totalValue)}\n              </p>\n            }\n             \n        </div>\n\n        <div className=\"box small\" >\n          <h3>Parallel Share of Total Market</h3>\n          <Share market={marketshare} price={tvl}/>\n        </div>  \n      </div>\n\n      <div className=\"box full \">\n        <h3>Crowdloan by Projects</h3>\n        <div className=\"selectors\">\n          <p>\n            <span><i className=\"gray\"/> Total DOT Raised </span>\n            <span><i className=\"blue\"/> Raised on Parallel </span>\n          </p>\n        </div>\n        { !raising ? 'Loading...' : \n          raising.sort((a, b) => b.raised - a.raised).filter(data => data.paraId !== \"2017\" && data.paraId !== \"2003\" ).map((index) => {\n            \n            const id = index.paraId,\n                  r  = index.raised,\n                  t  = raising[0].raised;\n            return (\n\n              <div  key={id} id={id}>\n                <div className=\"flex\">\n                  \n                  {!parachain ? 'Loading...' : parachain.filter(i => i.paraid === id).map(icon => (\n                    <Logo key={index.paraId} src={icon}/>\n                  ))}    \n\n                  {!contrib ? 'Loading...' : contrib.filter(g => g.paraId === id).map(graph => {\n                     const gTotal = graph.total/r,\n                           rt     = r/t;\n                    return (\n                    <>\n                      <div className=\"crowdloan-by\">\n                        <ProgressBar key={index.paraId} width={rt} bar={gTotal}/>\n                        <div>\n                          <p className=\"marketData\"><strong> { m(r) } </strong> | <span> { Porcent(gTotal) + '% (' + m(graph.total) + ')' } </span>  </p>\n                        </div>\n                      </div>\n                    </>\n                  )})}\n                  \n                </div>\n              </div>\n              \n            )\n         } )\n        }\n      </div>\n\n      <div className=\"flex\">\n        <div className=\"box tvl auctions\" >\n          <h3>DOT Auctions <span>Total Supply: <strong>1,103,303,471 DOT</strong></span></h3>\n          <Dotmarket raise={raising} marketShare={marketshare.market}/>\n        </div>  \n        <div className=\"box small dominance-market\">\n          <h3>Market Dominance</h3>\n          <MarketDominance data={binance} share={marketshare}/>\n          </div> \n      </div>\n\n      <div className=\"box full\">\n        <h3>Crowdloan TVL</h3>\n        {tvl && \n          <GlobalTvl price={tvl} />\n        }\n      </div>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport Header         from './components/header'\nimport CrowdloanList  from './components/crowdloanList'\nimport './styles/styles.css'; \n\nfunction App() {\n  const raiseApi          = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot\"\n  const contributionsApi  = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot/contributions\"\n  const tvlApi            = \"https://auction-service-prod.parallel.fi/crowdloan/total-value\"\n  const BinanceApi        = \"https://www.binance.com/bapi/earn/v1/public/lending/dot/project/home/list?auctioning=true\"\n\n  const [raised        , setRaised        ] = useState();\n  const [contributions , setContributions ] = useState();\n  const [tvl           , setTvl           ] = useState();\n  const [binance       , setBinance       ] = useState();\n\n  const getRaised = async () => {\n    const res = await fetch(raiseApi);\n    const responseJson = await res.json();\n\n    setRaised(responseJson)\n  }\n\n  const getContributions = async () => {\n    const res = await fetch(contributionsApi);\n    const responseJson = await res.json();\n\n    setContributions(responseJson)\n\n  }\n\n  const getTvl = async () => {\n    const res = await fetch(tvlApi);\n    const responseJson = await res.json();\n    setTvl(responseJson)\n  }\n\n  const getBinance = async () => {\n    const res = await fetch(BinanceApi);\n    const responseJson = await res.json();\n    setBinance(responseJson)\n  }\n  \n  useEffect(()=>{\n    function load() {\n      getRaised();\n      getContributions();\n      getTvl()\n      getBinance()\n\n    }\n\n    load();\n\n\n      setInterval(() => {\n        load()\n      }, 30000)\n  \n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <CrowdloanList raise={raised} contributions={contributions} tvl={tvl} other={binance}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = {\n  parachain: [\n    { paraid: '2000', name: 'Acala'                   , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/acala-circle.svg' },\n    { paraid: '2004', name: 'Moonbeam'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/moonbeam.png' },\n    { paraid: '2006', name: 'Astar'                   , icon: 'https://astar.network/images/brand-logo-mark.png' },\n    { paraid: '2012', name: 'Parallel Finance'        , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/fearless-utils/crowdloan/icons/parallel.svg' },\n    { paraid: '2015', name: 'Manta Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/manta.png' },\n    { paraid: '2002', name: 'Clover Network'          , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/clover.svg' },\n    { paraid: '2013', name: 'Litentry'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/litentry.png' },\n    { paraid: '2018', name: 'SubDao'                  , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/subdao.png' },\n    { paraid: '2017', name: '2017'                    , icon: 'https://crowdloan.parallel.fi/static/media/polkadot.7e142f48.svg' },\n    { paraid: '2001', name: 'Bifrost'                 , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/bifrost.svg' },\n    { paraid: '107' , name: 'Centrifuge'              , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/centrifuge.png' },\n    { paraid: '2008', name: 'Crust Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/crust.svg' },\n    { paraid: '108' , name: 'Darwinia Network'        , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/darwinia.png' },\n    { paraid: '1012', name: 'Efinity'                 , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/fearless-utils/crowdloan/icons/efinity.png' },\n    { paraid: '109' , name: 'Equilibrium'             , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/chains/equilibrium.svg' }\n  ]\n};"],"sourceRoot":""}
{"version":3,"sources":["assets/images/logo.svg","components/header/index.jsx","data/helpers.jsx","data/tvl.jsx","data/share.jsx","components/Logo/index.jsx","components/ProgressBar/index.jsx","components/Dotmarket/index.jsx","assets/images/binance.svg","assets/images/network.svg","assets/images/parallel.svg","components/MarketDominance/index.jsx","components/crowdloanList/index.jsx","App.js","index.js","data/parachains.jsx"],"names":["Header","src","logo","alt","m","value","val","Math","abs","Number","toFixed","Porcent","Tvl","data","tvl","className","totalValue","parseInt","toLocaleString","Share","vals","price","dotPrice","share","market","viewBox","cx","cy","r","strokeWidth","fill","transform","strokeDasharray","strokeDashoffset","porcent","x","y","dx","textAnchor","Logo","icon","name","ProgressBar","w","width","b","bar","style","Dotmarket","raising","raise","parachain","Parachains","aucitonShare","marketShare","sort","a","raised","filter","paraId","map","index","id","i","paraid","network","MarketDominance","binanceTVL","decimals","bin","datachart","BinancePortcent","paralelPorcent","nonshare","otherMarkets","reduce","sum","current","votedAmount","parseFloat","datasets","cutout","backgroundColor","Binance","Parallel","Networks","CrowdloanList","contrib","contributions","marketshare","binance","other","total","t","g","graph","gTotal","rt","App","useState","setRaised","setContributions","setTvl","setBinance","getRaised","fetch","res","json","responseJson","getContributions","getTvl","getBinance","useEffect","load","setInterval","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.af05a7b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f948a1cf.svg\";","import React from \"react\";\nimport logo from '../../assets/images/logo.svg';\n\nexport default function Header() {\n  return (\n    <header>\n      <img src={logo} alt=\"Parallel Analytics\"/>\n    </header>\n  );\n}","export function m (value) {\n  const val = value/10000000000;\n\n    return Math.abs(Number(val)) >= 1.0e+9 ? \n    (Math.abs(Number(val)) / 1.0e+9).toFixed(2) + \"B\"\n    // Six Zeroes for Millions \n    : Math.abs(Number(val)) >= 1.0e+6\n\n    ? (Math.abs(Number(val)) / 1.0e+6).toFixed(2) + \"M\"\n    // Three Zeroes for Thousands\n    : Math.abs(Number(val)) >= 1.0e+3\n\n    ? (Math.abs(Number(val)) / 1.0e+3).toFixed(2) + \"K\"\n\n    : Math.abs(Number(val)).toFixed(2);\n\n}\n\nexport function n (value) {\n  return parseInt(value.toFixed(2)).toLocaleString(\"en-US\");\n}\n\nexport function Porcent (value) {\n  return (value*100).toFixed(2)\n}","import React from 'react';\nimport { n } from './helpers.jsx';\n\nexport default function Tvl(data) {\n  const tvl     = data['tvl']\n  return (\n    <>\n      <p className=\"big\"> \n        { !tvl ? 'Calculating' : \n        '$' + n(tvl.totalValue)\n        } \n      </p>\n    </>\n  )\n}","import React from 'react';\nimport { m } from './helpers.jsx';\n\nexport default function Share(vals) {\n  const price     = vals?.price?.dotPrice\n  const share     = vals.market\n  return (\n    <>\n        <svg className=\"score\"  viewBox=\"-25 -25 400 400\">\n          <circle className=\"score-empty\" cx=\"175\" cy=\"175\" r=\"175\" strokeWidth=\"25\" fill=\"none\"></circle>\n          <circle className=\"js-circle score-circle\" transform=\"rotate(-90 175 175)\" cx=\"175\" cy=\"175\" r=\"175\" strokeDasharray=\"1100\" \n            strokeDashoffset={ !share.market ? 0 : (1100 * (100 - share.porcent)) / 100} strokeWidth=\"25\" fill=\"none\"></circle>\n          <text className=\"js-text score-text\" x=\"50%\" y=\"45%\" dx=\"-25\" textAnchor=\"middle\">\n            { !share.porcent ? 'calculating' : share.porcent + '%'}\n          </text>\n          <text className=\"js-text score-text small\" x=\"50%\" y=\"55%\" dx=\"-25\" textAnchor=\"middle\">\n          { !share.market  ? 'calculating' : \n            'of ' + m(share.market*price)  \n          }\n          </text>\n        </svg>  \n    </>\n  )\n}","import React from 'react';\n\nexport default function Logo(src) {\n  const icon = src.src;\n  return (\n    <>\n      <div key={icon} className=\"icon\">\n        <img src={icon.icon} alt={icon.name} />\n      </div>\n    </>\n  )\n}","import React from 'react';\n\nexport default function ProgressBar(data) {\n  const w = data.width,\n        b = data.bar;\n  return (\n    <>\n      <div className=\"meter\" style={{width: 800*w }} >\n        <span style={{width: b*100 + '%'}}></span>\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport Parachains from '../../data/parachains.jsx';\nimport { m, Porcent } from '../../data/helpers.jsx';\nimport Logo from '../../components/Logo';\n\nexport default function Dotmarket(data) {\n  const raising       = data.raise;\n  const parachain     = Parachains.parachain;\n  const aucitonShare  = data.marketShare;\n  const supply        = '1103303471';\n  return (\n    <>\n        <div>\n          <div className=\"network-header flex justify\">\n            <h4 className=\"network-name\">PROJECT</h4> <h4 className=\"network-cap\">DOT</h4> <h4 className=\"network-auction\">% Auction</h4> <h4 className=\"network-total\">% Total</h4>\n          </div>\n          <div>\n            { \n              !raising ? \"Getting Data\" : \n              raising.sort((a, b) => b.raised - a.raised).filter(data => data.paraId !== \"2017\" && data.paraId !== \"2003\" ).map((index) => {\n              \n              const id = index.paraId,\n                    r  = index.raised,\n                    t  = raising[0].raised;\n              return (\n                <>\n                  <div className=\"network flex justify\">\n                    {!parachain ? 'Loading...' : parachain.filter(i => i.paraid === id).map(network => (\n                      <p className=\"network-name\"><Logo src={network}/> <span> {network.name} </span></p>\n                    ))}    \n                    \n                    <p className=\"network-cap\">{m(r)}</p>\n                    <p className=\"network-auction\">{ Porcent(r/aucitonShare) + '%'}</p>\n                    <p className=\"network-total\">{ Porcent((r/10000000000)/supply) + '%'}</p>\n                  </div>\n                </>\n              )\n            })\n          }\n\n          </div>\n        </div>\n    </>\n  )\n}","export default __webpack_public_path__ + \"static/media/binance.d8c61230.svg\";","export default __webpack_public_path__ + \"static/media/network.576efa45.svg\";","export default __webpack_public_path__ + \"static/media/parallel.5a293074.svg\";","import React from 'react';\nimport { m , Porcent } from '../../data/helpers.jsx';\nimport Binance from '../../assets/images/binance.svg';\nimport Networks from '../../assets/images/network.svg';\nimport Parallel from '../../assets/images/parallel.svg';\nimport { Doughnut } from 'react-chartjs-2';\n\n\n\n\nexport default function MarketDominance(data) {\n  const binanceTVL = data?.data;\n  const decimals   = 10000000000;\n  const share      = data?.share?.share;\n  const market     = data?.share.market/decimals; \n\n\n  \n  let bin = false;\n  let datachart = false;\n  let BinancePortcent = false;\n  let paralelPorcent  = false;\n  let nonshare = false;\n  let otherMarkets = false;\n  if(binanceTVL) {\n  bin = binanceTVL.reduce(function(sum, current) {\n    return parseInt(sum) + parseInt(current.votedAmount);\n  }, 0);\n\n\n  BinancePortcent = Porcent(bin/market);\n  paralelPorcent  = Porcent((share/decimals)/market);\n  nonshare        =  parseFloat(BinancePortcent) + parseFloat(paralelPorcent);\n  otherMarkets    = m(((market - bin) - (share/decimals))*decimals)\n  datachart = {\n \n    datasets: [\n      {\n        data: [BinancePortcent , paralelPorcent, 100-nonshare ],\n        cutout:90,\n        backgroundColor: [\n          ' #f4c349',\n          '#0c3ee3',\n          ' #f8f8f8',\n\n        ]\n      },\n    ],\n  };\n  \n\n\n}\n\n  return (  \n    <>\n    <div className=\"dominance\">\n      { !datachart ? '' :\n      <Doughnut data={datachart} />\n      }\n      <div>\n        <img className=\"logo\" src={Binance} alt=\"Binance\" />\n        <p>Binance <strong>{!bin ? 'loading' : m(bin*decimals) + ' ('+ BinancePortcent +'%)' }  </strong></p>\n         \n      </div>\n      <div>\n        <img className=\"logo\" src={Parallel} alt=\"Binance\" />\n        <p>Parallel Finance <strong>{ !share ? 'getting' : m(share) + ' ('+ paralelPorcent +'%)'}</strong></p>\n        \n      </div>\n      <div>\n        <img className=\"logo\" src={Networks} alt=\"Binance\" />\n        <p>Others <strong>{ !share ? 'getting' : otherMarkets + ' ('+ (100-nonshare) +'%)'}</strong></p>\n      </div>     \n    </div>\n\n    </>\n  )\n}\n\n\n","import React from 'react';\nimport Parachains from '../../data/parachains.jsx';\nimport { m , Porcent } from '../../data/helpers.jsx';\nimport Tvl from '../../data/tvl.jsx';\nimport Share from '../../data/share.jsx';\nimport Logo from '../../components/Logo';\nimport ProgressBar from '../../components/ProgressBar';\nimport Dotmarket from '../../components/Dotmarket';\nimport MarketDominance from '../../components/MarketDominance'\n\nexport default function CrowdloanList(data) {\n\n  const raising     = data?.raise\n  const contrib     = data?.contributions\n  const parachain   = Parachains.parachain;\n  const tvl         = data?.tvl\n  const marketshare = [{}];\n  const binance     = data?.other?.data;\n\n  if(raising && contrib) {\n    const market = raising.reduce(function(sum, current) {\n      return parseInt(sum) + parseInt(current.raised);\n    }, 0);\n    const share = contrib.reduce(function(sum, current) {\n      return parseInt(sum) + parseInt(current.total);\n  }, 0)\n\n    marketshare.market = market;\n    marketshare.share  = share;\n    marketshare.porcent = Porcent(marketshare.share/marketshare.market);\n  }  \n\n\n\n  return (\n    <>\n    <div>\n\n    </div>\n      <div className=\"flex\">\n        <div className=\"box tvl\">\n            <h3> Total Value Locked </h3>\n            <Tvl tvl={tvl} />\n        </div>\n\n        <div className=\"box small\" >\n          <h3>Parallel Share of Total Market</h3>\n          <Share market={marketshare} price={tvl}/>\n        </div>  \n      </div>\n\n      <div className=\"box full\">\n        <h3>Crowdloan by Projects</h3>\n        <div className=\"selectors\">\n          <p>\n            <span><i className=\"gray\"/> Total DOT Raised </span>\n            <span><i className=\"blue\"/> Raised on Parallel </span>\n          </p>\n        </div>\n        { !raising ? 'Loading...' : \n          raising.sort((a, b) => b.raised - a.raised).filter(data => data.paraId !== \"2017\" && data.paraId !== \"2003\" ).map((index) => {\n            \n            const id = index.paraId,\n                  r  = index.raised,\n                  t  = raising[0].raised;\n            return (\n\n              <div key={id} id={id}>\n                <div className=\"flex\">\n                  \n                  {!parachain ? 'Loading...' : parachain.filter(i => i.paraid === id).map(icon => (\n                    <Logo src={icon}/>\n                  ))}    \n\n                  {!contrib ? 'Loading...' : contrib.filter(g => g.paraId === id).map(graph => {\n                     const gTotal = graph.total/r,\n                           rt     = r/t;\n                    return (\n                    <>\n                      <ProgressBar width={rt} bar={gTotal}/>\n                      <div>\n                        <p className=\"marketData\"><strong> { m(r) } </strong> | <span> { Porcent(gTotal) + '% (' + m(graph.total) + ')' } </span>  </p>\n                      </div>\n                    </>\n                  )})}\n                  \n                </div>\n              </div>\n              \n            )\n         } )\n        }\n      </div>\n\n      <div className=\"flex\">\n        <div className=\"box tvl auctions\" >\n          <h3>DOT Auctions <span>Total Supply: <strong>1,103,303,471 DOT</strong></span></h3>\n          <Dotmarket raise={raising} marketShare={marketshare.market}/>\n        </div>  \n        <div className=\"box small dominance-market\">\n          <h3>Market Dominance</h3>\n          <MarketDominance data={binance} share={marketshare}/>\n          </div> \n      </div>\n  \n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport Header         from './components/header'\nimport CrowdloanList  from './components/crowdloanList'\nimport './styles/styles.css'; \n\nfunction App() {\n  const raiseApi          = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot\"\n  const contributionsApi  = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot/contributions\"\n  const tvlApi            = \"https://auction-service-prod.parallel.fi/crowdloan/total-value\"\n  const BinanceApi        = \"https://www.binance.com/bapi/earn/v1/public/lending/dot/project/home/list?auctioning=true\"\n\n  const [raised        , setRaised        ] = useState();\n  const [contributions , setContributions ] = useState();\n  const [tvl           , setTvl           ] = useState();\n  const [binance       , setBinance       ] = useState();\n\n  const getRaised = async () => {\n    const res = await fetch(raiseApi);\n    const responseJson = await res.json();\n\n    setRaised(responseJson)\n  }\n\n  const getContributions = async () => {\n    const res = await fetch(contributionsApi);\n    const responseJson = await res.json();\n\n    setContributions(responseJson)\n\n  }\n\n  const getTvl = async () => {\n    const res = await fetch(tvlApi);\n    const responseJson = await res.json();\n    setTvl(responseJson)\n  }\n\n  const getBinance = async () => {\n    const res = await fetch(BinanceApi);\n    const responseJson = await res.json();\n    setBinance(responseJson)\n  }\n  \n  useEffect(()=>{\n    function load() {\n      getRaised();\n      getContributions();\n      getTvl()\n      getBinance()\n\n    }\n\n    load();\n\n\n      setInterval(() => {\n        load()\n      }, 30000)\n  \n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <CrowdloanList raise={raised} contributions={contributions} tvl={tvl} other={binance}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = {\n  parachain: [\n    { paraid: '2000', name: 'Acala'                   , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/acala-circle.svg' },\n    { paraid: '2004', name: 'Moonbeam'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/moonbeam.png' },\n    { paraid: '2006', name: 'Astar'                   , icon: 'https://astar.network/images/brand-logo-mark.png' },\n    { paraid: '2012', name: 'Parallel Finance'        , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/fearless-utils/crowdloan/icons/parallel.svg' },\n    { paraid: '2015', name: 'Manta Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/manta.png' },\n    { paraid: '2002', name: 'Clover Network'          , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/clover.svg' },\n    { paraid: '2013', name: 'Litentry'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/litentry.png' },\n    { paraid: '2018', name: 'SubDao'                  , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/subdao.png' },\n    { paraid: '2017', name: '2017'                    , icon: 'https://crowdloan.parallel.fi/static/media/polkadot.7e142f48.svg' },\n    { paraid: '2001', name: 'Bifrost'                 , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/bifrost.svg' },\n    { paraid: '107' , name: 'Centrifuge'              , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/centrifuge.png' },\n    { paraid: '2008', name: 'Crust Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/crust.svg' },\n    { paraid: '108' , name: 'Darwinia Network'        , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/darwinia.png' },\n    { paraid: '1012', name: 'Efinity'                 , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/fearless-utils/crowdloan/icons/efinity.png' },\n    { paraid: '109' , name: 'Equilibrium'             , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/chains/equilibrium.svg' }\n  ]\n};"],"sourceRoot":""}
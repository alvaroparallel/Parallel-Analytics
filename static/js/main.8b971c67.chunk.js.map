{"version":3,"sources":["assets/images/logo.svg","components/header/index.jsx","data/helpers.jsx","data/globalTvl.jsx","data/Htvl.jsx","data/share.jsx","data/DailyDot.jsx","components/Logo/index.jsx","components/ProgressBar/index.jsx","components/Dotmarket/index.jsx","assets/images/binance.svg","assets/images/network.svg","assets/images/parallel.svg","components/MarketDominance/index.jsx","data/DotGroups.jsx","components/crowdloanList/index.jsx","App.js","index.js","data/parachains.jsx"],"names":["Header","src","logo","alt","m","value","val","Math","abs","Number","toFixed","n","parseFloat","toLocaleString","Porcent","GlobalTvl","price","dotPrice","hDot","useState","tvl","setTvl","dailyVar","setDailyVar","getData","a","fetch","res","json","responseJson","Object","keys","stats","length","getDotPrice","finalDotPrice","Data","dates","map","date","i","replace","newArray","item","tvlFinal","dots","_","sum","values","close","finalfinal","merge","useEffect","className","includes","ResponsiveContainer","width","height","debounce","AreaChart","data","stroke","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","XAxis","dataKey","hide","Tooltip","content","props","payload","entry","index","Area","scaleToFit","type","strokeWidth","fill","YAxis","orientation","tickFormatter","Intl","NumberFormat","notation","compactDisplay","format","Htvl","htvls","finalhtvls","entries","htvld","result","setResult","dotHistorical","then","response","results","reduce","r","newDatum","push","usd","tick","fontSize","Share","vals","share","market","viewBox","cx","cy","transform","strokeDashoffset","porcent","x","y","dx","textAnchor","DailyDot","contributions","BarChart","minTickGap","Bar","radius","Logo","icon","name","ProgressBar","w","b","bar","c","bar2","style","data-tooltip","parseInt","Dotmarket","raising","raise","parachain","Parachains","aucitonShare","marketShare","sort","raised","filter","paraId","paraid","network","MarketDominance","binanceTVL","decimals","bin","bin2","BinancePortcent","paralelPorcent","nonshare","otherMarkets","current","votedAmount","datase","COLORS","PieChart","Pie","innerRadius","outerRadius","cornerRadius","paddingAngle","Cell","Binance","Parallel","Networks","filters","ff","total","totalContributions","keyName","CrowdloanList","contrib","htvl","DotAmount","dotAmount","marketshare","binance","other","finalBinance","keyBy","totalValue","t","obj","code","dataBinance","g","graph","gTotal","bgTotal","rt","App","BinanceApi","setRaised","setContributions","setDotAmount","historicalTvl","setHistoricalTvl","setBinance","getRaised","getContributions","getTvl","getDotamount","getHistoricalTvl","getBinance","res2","responseJson2","load","setInterval","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8b971c67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f948a1cf.svg\";","import React from \"react\";\nimport logo from '../../assets/images/logo.svg';\n\nexport default function Header() {\n  return (\n    <header>\n      <img src={logo} alt=\"Parallel Analytics\"/>\n    </header>\n  );\n}","export function m (value) {\n  const val = value/10000000000;\n\n    return Math.abs(Number(val)) >= 1.0e+9 ? \n    (Math.abs(Number(val)) / 1.0e+9).toFixed(2) + \"B\"\n    // Six Zeroes for Millions \n    : Math.abs(Number(val)) >= 1.0e+6\n\n    ? (Math.abs(Number(val)) / 1.0e+6).toFixed(2) + \"M\"\n    // Three Zeroes for Thousands\n    : Math.abs(Number(val)) >= 1.0e+3\n\n    ? (Math.abs(Number(val)) / 1.0e+3).toFixed(2) + \"K\"\n\n    : Math.abs(Number(val)).toFixed(2);\n\n}\n\nexport function n (value) {\n  return parseFloat(value.toFixed(2)).toLocaleString(\"en-US\");\n}\n\nexport function Porcent (value) {\n  return (value*100).toFixed(2)\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { n } from './helpers.jsx';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport _ from \"lodash\"\n\nexport default function GlobalTvl(price) {\n  let dotPrice = price.price.dotPrice;\n  let hDot;\n\n\n  const [tvl            , setTvl             ] = useState();\n  const [dailyVar       , setDailyVar        ] = useState();  \n  \n  const getData = async () => {\n    const res = await fetch(\"https://auction-service-prod.parallel.fi/crowdloan/statistics/polkadot?fundIds=2000-1muqpuFcWvy1Q3tf9Tek882A6ngz46bWPsV6sWiYccnVjKb-0,2002-14e4GmLj5CccWe9Rant9q6yQro1oysqvKiBiHcpCRoscZ1yY-0,2003-1EdsnniYSKNjHNAvDgvBfRNzKnSzi6kgsHQFCG4PhAyyJWH-0,2004-12KHAurRWMFJyxU57S9pQerHsKLCwvWKM1d3dKZVx7gSfkFJ-1,2006-1j5YyEGdcPd9BxkzVNNjKkqdi5f7g3Dd7JMgaGUhsMrZ6dZ-0,2012-15kjdKF4hRbYWzLjovPiohT5pVheXhhk8oKHr3DyTaxF2evd-0,2013-152deMvsN7wxMbSmdApsds6LWNNNGgsJ8TTpZLTD2ipEHNg3-0,2015-1k9St8FDkcTVSe6HzSRQivYi3qgRuQfQp8btpVMrdTFs99S-0,2017-16RzEcgXVzXXn2gEQbqqp74Pw7MJSb7PKtz29BhVZmpXBKRn-0,2018-13n7S6wAFjSqppxyjfSxcPNqQv5jL7PYtxjg3Gxw3RALpyBk-0,2021-12LxQoLA9hebiMSPT3G7ixz73LLuYomMNuRLqX7c9bRWxDFG-0,2028-13pQt6LnK2tXZtXbiQ6PBYikEoNTi6MXkeBdQCeyR9hm6k1p-0\");\n    const responseJson = await res.json();\n    const getDotPrice   = await fetch('https://min-api.cryptocompare.com/data/v2/histoday?fsym=DOT&tsym=USD&limit='+Object.keys(responseJson.stats).length)\n    const finalDotPrice = await getDotPrice.json()\n      hDot = finalDotPrice.Data.Data;\n\n      let dates = responseJson.stats.map(function(date, i){\n        return {\n          dates: date.date.replace(', 2021', '')\n        }\n      });\n      \n      \n      let newArray = responseJson.stats.map(function(item, i){\n        delete item.date;\n        return item\n      });\n      \n      let tvlFinal = newArray.map(function(item, i){\n        return {\n          dots : _.sum(_.values(newArray[i])),\n          value: _.sum(_.values(newArray[i]))*hDot[i].close\n        }\n        \n      })\n      \n      let finalfinal = _.merge(dates, tvlFinal);\n\n      setTvl(finalfinal)\n      setDailyVar((((tvlFinal[tvlFinal.length - 1].value - tvlFinal[tvlFinal.length - 2].value)/tvlFinal[tvlFinal.length - 1].value)*100).toFixed(2))\n  }\n  useEffect(()=>{\n    getData()\n  }, [])\n  \n\n  const renderLegend = (props) => {\n    const { payload } = props;\n    return (\n      <ul className=\"tvl-tooltip\"> \n        {\n          payload.map((entry, index) => (\n            <li key={`item-${index}`}>\n              <p><strong>{entry.payload.dates}</strong></p>\n              <p>\n                <strong>{n(entry.payload.dots)} DOT </strong>\n              </p>\n              <p className=\"small-gray\">\n                $ { n(entry.payload.value) }\n\n              </p>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n\n\n\n  return hDot ? 'loading' : (\n    <>\n\n      <p className=\"big\"> \n       \n        {!tvl ? \"\" :  '$'+ n(parseFloat(tvl[tvl.length - 1].value))} \n        {dailyVar  &&\n          <span className={ dailyVar.includes(\"-\") ? 'negative variation': 'positive variation' }>\n              { dailyVar.includes(\"-\") ? '' + dailyVar+ '%' : '+' + dailyVar+ '%' }\n          </span>\n         }\n      </p>\n      \n      {tvl &&\n        <>\n          <div className=\"globalTvl\">\n            <ResponsiveContainer className=\"crowdloantvl\" width=\"100%\" height={250} debounce={1}>\n              <AreaChart\n                width=\"100%\"\n                height={250}\n                data={tvl}\n                stroke={3}\n                margin={{\n                  top: 10,\n                  right: 0,\n                  left: 30,\n                  bottom: 0,\n                }}\n              >\n\n                <defs>\n                  <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5.23%\" stopColor=\"#0C3EE3\" stopOpacity={1}/>\n                    <stop offset=\"7.34%\" stopColor=\"#0C3EE3\" stopOpacity={1}/>\n                    <stop offset=\"97.88%\" stopColor=\"rgba(255, 255, 255, 0.64)\" stopOpacity={1}/>\n                    \n                  </linearGradient>\n                </defs>\n\n                <CartesianGrid strokeDasharray=\"1 5\" />\n                <XAxis dataKey=\"dates\" hide={true}/>\n                \n                <Tooltip content={renderLegend}  />\n                <Area scaleToFit={true} type=\"monotone\" dataKey=\"value\" strokeWidth=\"2.5\" stroke=\"#0C3EE3\" fill=\"url(#colorUv)\" />\n                <YAxis orientation=\"right\" tickFormatter={(value) => new Intl.NumberFormat('en', { notation: \"compact\" , compactDisplay: \"short\" }).format(value)} />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n        </>\n      }\n\n    </>\n  )\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { n, m, days } from './helpers.jsx';\nimport { AreaChart, Area, XAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nexport default function Htvl(data) {\n  const htvls = data?.data;\n  const finalhtvls = Object.entries(htvls);\n\n  const htvld = finalhtvls.map(function(item, i){\n    return { \n      date: item[0],\n      val : item[1]/10000000000,\n    }\n  })\n\n\n  const [result        , setResult        ] = useState();\n\n  useEffect(()=>{\n    \n    const dotHistorical = \"https://min-api.cryptocompare.com/data/v2/histoday?fsym=DOT&tsym=USD&limit=\"+Object.keys(finalhtvls).length;\n    const getDotPrice = fetch(dotHistorical).then(response => response.json())\n    .then(data => {\n      const dotPrice = data.Data.Data;\n      const results  = htvld.reduce((r, value, i) => {\n        const { val, date } = value\n        const cumVal = i === 0 ? 0 : r[i - 1].val\n        const newDatum = { date, val: val + cumVal }\n        r.push(newDatum);\n        return r;\n    }, []).map(function(item, i){\n      return { \n        date : item.date,\n        val : item.val,\n        usd : item.val*dotPrice[i].close,\n      }\n    })\n\n    setResult(results);\n    });\n}, [])\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <ul className=\"tvl-tooltip\"> \n      {\n        payload?.map((entry, index) => (\n          <li key={`item-${index}`}>\n            <p><strong>{entry.payload.date}</strong></p>\n            <p>\n              <strong>{n(entry.value)} DOT </strong>\n            </p>\n            <p className=\"small-gray\">\n              (${n(entry.payload.usd)})\n            </p>\n          </li>\n        ))\n      }\n    </ul>\n  );\n}\n\n\n  return (\n    <>\n\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n\n     \n        <AreaChart\n         \n          width={600}\n          height={200}\n          data={result}\n          margin={{\n            top: 10,\n            right: 30,\n            left: 0,\n            bottom: 0,\n          }}\n        >\n        <defs>\n          <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5.23%\" stopColor=\"#0C3EE3\" stopOpacity={1}/>\n            <stop offset=\"7.34%\" stopColor=\"#0C3EE3\" stopOpacity={1}/>\n            <stop offset=\"97.88%\" stopColor=\"rgba(255, 255, 255, 0.64)\" stopOpacity={1}/>\n            \n          </linearGradient>\n        </defs>\n          <CartesianGrid strokeDasharray=\"1 5\" />\n          <XAxis dataKey=\"date\" tick={{fontSize: 13}} />\n\n          <Tooltip content={renderLegend}/>\n          <Area type=\"monotone\" dataKey=\"val\" strokeWidth=\"2.5\" stroke=\"#0C3EE3\" fill=\"url(#colorUv)\" />\n        </AreaChart>\n      </ResponsiveContainer>\n\n    </>\n  )\n}\n","import React from 'react';\nimport { m } from './helpers.jsx';\n\nexport default function Share(vals) {\n  const price     = vals?.price?.dotPrice\n  const share     = vals.market\n  return (\n    <>\n        <svg className=\"score\"  viewBox=\"-25 -25 400 400\">\n          <circle className=\"score-empty\" cx=\"175\" cy=\"175\" r=\"175\" strokeWidth=\"25\" fill=\"none\"></circle>\n          <circle className=\"js-circle score-circle\" transform=\"rotate(-90 175 175)\" cx=\"175\" cy=\"175\" r=\"175\" strokeDasharray=\"1100\" \n            strokeDashoffset={ !share.market ? 0 : (1100 * (100 - share.porcent)) / 100} strokeWidth=\"25\" fill=\"none\"></circle>\n          <text className=\"js-text score-text\" x=\"50%\" y=\"45%\" dx=\"-25\" textAnchor=\"middle\">\n            { !share.porcent ? 'calculating' : share.porcent + '%'}\n          </text>\n          <text className=\"js-text score-text small\" x=\"50%\" y=\"55%\" dx=\"-25\" textAnchor=\"middle\">\n          { !share.market  ? 'calculating' : \n            'of ' + m(share.market) + ' DOT'  \n          }\n          </text>\n        </svg>  \n    </>\n  )\n}","import React from 'react';\nimport { n } from './helpers.jsx';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nexport default function DailyDot(data) {\n  const htvls = data?.contributions;\n  const finalhtvls = Object.entries(htvls);\n  const htvld = finalhtvls.map(function(item, i){\n    return { \n      date: item[0],\n      val : item[1]/10000000000,\n    }\n  })\n\n  const renderLegendToolDot = (props) => {\n    const { payload } = props;\n  \n    return (\n      <ul className=\"tvl-tooltip\"> \n        {\n          payload?.map((entry, index) => (\n            <li key={`item-${index}`}>\n              <p><strong>{entry.payload.date}</strong></p>\n              <p>\n                <strong>{n(entry.payload.val)} DOT </strong>\n              </p>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n  \n  return (\n    <>\n      <div className=\"dailydot\">\n        <ResponsiveContainer className=\"daily-dots\" width=\"100%\" height=\"100%\" >\n          <BarChart\n            width=\"100%\"\n            height={300}\n            data={htvld}\n\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n            >\n            <defs>\n              <linearGradient id=\"colorUvb\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5.23%\" stopColor=\"#0C3EE3\" stopOpacity={0.9}/>\n                <stop offset=\"57.88%\" stopColor=\"#0C3EE3\" stopOpacity={0.95}/>\n                <stop offset=\"97.88%\" stopColor=\"#0C3EE3\" stopOpacity={1}/>\n                \n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" tick={{fontSize: 13}}  />\n            <YAxis tick={{fontSize: 13}} orientation=\"right\" tickFormatter={(value) => new Intl.NumberFormat('en', { notation: \"compact\" , compactDisplay: \"short\" }).format(value)} minTickGap={20}/>\n            <Tooltip content={renderLegendToolDot}/>\n            <Bar dataKey=\"val\" stroke=\"#0C3EE3\" fill=\"url(#colorUvb)\" radius={[4, 4, 0, 0]}/>\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\n\nexport default function Logo(src) {\n  const icon = src.src;\n  return (\n    <>\n      <div key={icon} className=\"icon\">\n        <img src={icon.icon} alt={icon.name} />\n      </div>\n    </>\n  )\n}","import React from 'react';\n\nexport default function ProgressBar(data) {\n  const w = data.width,\n        b = data.bar,\n        c = data.bar2;\n  return (\n    <>\n      <div className=\"meter\" style={{width: 800*w }} >\n        <span style={{width: b*100 + '%'}} data-tooltip={(b*100).toFixed(2) + '%'}></span>\n        <span style={{left:b*100 + '%', width: parseInt((c*100)).toFixed(2)+ '%'}} data-tooltip={parseInt((c*100)).toFixed(2)+ '%'}></span>\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport Parachains from '../../data/parachains.jsx';\nimport { m, Porcent } from '../../data/helpers.jsx';\nimport Logo from '../../components/Logo';\n\nexport default function Dotmarket(data) {\n  const raising       = data.raise;\n  const parachain     = Parachains.parachain;\n  const aucitonShare  = data.marketShare;\n  const supply        = '1103303471';\n  return (\n    <>\n        <div>\n          <div className=\"network-header flex justify\">\n            <h4 className=\"network-name\">PROJECT</h4>\n            <h4 className=\"network-cap\">DOT</h4>\n            <h4 className=\"network-auction\">% Auction</h4>\n            <h4 className=\"network-total\">% Total</h4>\n          </div>\n          <div>\n            { \n              !raising ? \"Getting Data\" : \n              raising.sort((a, b) => b.raised - a.raised).filter(data => data.paraId !== \"2017\" && data.paraId !== \"2003\" && data.paraId !== \"2021\" && data.paraId !== \"2026\" ).map((index) => {\n              \n              const id = index.paraId,\n                    r  = index.raised,\n                    t  = raising[0].raised;\n              return (\n                <>\n                  <div key={id} className=\"network flex justify\">\n                    {!parachain ? 'Loading...' : parachain.filter(i => i.paraid === id).map(network => (\n                      <div  className=\"network-name\"><Logo src={network}/> <span> {network.name} </span></div>\n                    ))}    \n                    \n                    <p className=\"network-cap\">{m(r)}</p>\n                    <p className=\"network-auction\">{ Porcent(r/aucitonShare) + '%'}</p>\n                    <p className=\"network-total\">{ Porcent((r/10000000000)/supply) + '%'}</p>\n                  </div>\n                </>\n              )\n            })\n          }\n\n          </div>\n        </div>\n    </>\n  )\n}","export default __webpack_public_path__ + \"static/media/binance.d8c61230.svg\";","export default __webpack_public_path__ + \"static/media/network.576efa45.svg\";","export default __webpack_public_path__ + \"static/media/parallel.5a293074.svg\";","import React from 'react';\nimport { m , Porcent } from '../../data/helpers.jsx';\nimport Binance from '../../assets/images/binance.svg';\nimport Networks from '../../assets/images/network.svg';\nimport Parallel from '../../assets/images/parallel.svg';\nimport { PieChart, Pie, Tooltip, Cell, ResponsiveContainer } from 'recharts';\n\n\n\n\nexport default function MarketDominance(data) {\n  const binanceTVL = data?.data;\n  const decimals   = 10000000000;\n  const share      = data?.share?.share;\n  const market     = data?.share.market/decimals; \n\n  let bin = false;\n  let bin2 = false;\n  let datachart = false;\n  let BinancePortcent = false;\n  let paralelPorcent  = false;\n  let nonshare = false;\n  let otherMarkets = false;\n  if(binanceTVL) {\n    \n  bin = binanceTVL[0].data.reduce(function(sum, current) {\n    return parseInt(sum) + parseInt(current.votedAmount);\n  }, 0);\n  bin2 = binanceTVL[1].data.reduce(function(sum, current) {\n    return parseInt(sum) + parseInt(current.votedAmount);\n  }, 0);\n\n\n  BinancePortcent = Porcent((bin+bin2)/market);\n  paralelPorcent  = Porcent((share/decimals)/market);\n  nonshare        =  parseFloat(BinancePortcent) + parseFloat(paralelPorcent);\n  otherMarkets    = m(((market - bin) - (share/decimals))*decimals)\n  datachart = {\n \n    datasets: [\n      {\n        data: [BinancePortcent , paralelPorcent, 100-nonshare ],\n        cutout:90,\n        borderRadius: 100,\n        borderSkipped: true,\n        backgroundColor: [\n          ' #f4c349',\n          '#0c3ee3',\n          ' #f8f8f8',\n\n        ]\n      },\n    ],\n  };\n\n}\n  \nconst datase = [\n  { name: 'Binance', value: parseInt(BinancePortcent) },\n  { name: 'Parallel Finance', value: parseInt(paralelPorcent) },\n  { name: 'Others', value: 100-nonshare },\n];\nconst COLORS = ['#f6cc27', '#0c3ee3', '#f8f8f8'];\n  return (  \n    <>\n    <div className=\"dominance\">\n    <PieChart width={272} height={272}>\n       <Pie\n          data={datase}\n          cx={102}\n          cy={125}\n          innerRadius={82}\n          outerRadius={100}\n          cornerRadius={50}\n          paddingAngle={2}\n          dataKey=\"value\"\n        >\n          <Tooltip />\n          {datase.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>    \n\n      <div>\n        <img className=\"logo\" src={Binance} alt=\"Binance\" />\n        <p>Binance <strong>{!bin ? 'loading' : m((bin+bin2)*decimals) + ' ('+ BinancePortcent +'%)' }  </strong></p>\n         \n      </div>\n      <div>\n        <img className=\"logo\" src={Parallel} alt=\"Binance\" />\n        <p>Parallel Finance <strong>{ !share ? 'getting' : m(share) + ' ('+ paralelPorcent +'%)'}</strong></p>\n        \n      </div>\n      <div>\n        <img className=\"logo\" src={Networks} alt=\"Binance\" />\n        <p>Others <strong>{ !share ? 'getting' : otherMarkets + ' ('+ (100-nonshare).toFixed(2) +'%)'}</strong></p>\n      </div>     \n    </div>\n\n    </>\n  )\n}\n\n\n","import React, { useEffect, useState } from 'react';\nimport { n, Porcent } from './helpers.jsx';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport _ from \"lodash\"\n\nexport default function GlobalTvl(data) {\n  let dotPrice = data.price.dotPrice;\n  let filters    = data.dots;\n  let ff         = filters.filter;\n  let total      = filters.totalContributions;\n  return (\n    <>\n\n      <p className=\"big\">\n        {n(total) + ' Contributions'}\n      </p>\n\n      <div className=\"flex column\">\n          {Object.keys(ff).map((keyName, i) => (\n            <>\n              <div className=\"flex\">\n                <div>\n                  {(() => {\n                    switch (keyName) {\n                      case '100':\n                        return <p><strong>&#60;100</strong></p>\n                      case '1000':\n                        return <p><strong>100 - 1k</strong></p>\n                      case '10000':\n                      return <p><strong>1k - 10k</strong></p>   \n                      case '100000':\n                      return <p><strong>10k - 100k</strong></p>                                        \n                      default:\n                        return null\n                    }\n                  })()}\n                </div>\n                <div>\n                  <div className=\"travelcompany-input\" key={i}>\n                    <svg className=\"score small\"  width=\"48\" height=\"48\" viewBox=\"-25 -25 400 400\">\n                      <circle className=\"score-empty\" cx=\"175\" cy=\"175\" r=\"175\" strokeWidth=\"25\" fill=\"none\"></circle>\n                      <circle className=\"js-circle score-circle\" transform=\"rotate(-90 175 175)\" cx=\"175\" cy=\"175\" r=\"175\" strokeDasharray=\"1100\" \n                        strokeDashoffset={ (1100 * (100 - (100 - Porcent((total - ff[keyName].total )/total)).toFixed(2))) / 100} strokeWidth=\"25\" fill=\"none\"></circle>\n                      <text className=\"js-text score-text big\" x=\"50%\" y=\"55%\" dx=\"-25\" textAnchor=\"middle\">\n                        {(100 - Porcent((total - ff[keyName].total )/total)).toFixed(0) + '%' }\n                      </text>\n                    </svg>                 \n                  </div>\n                </div>\n                <div>\n \n                  <div className=\"travelcompany-input\" key={i}>\n                    <span className=\"input-label\">{n(ff[keyName].value)}</span>\n                  </div>\n                </div>\n              </div>\n            </>\n          ))}\n        </div>\n\n    </>\n  )\n}\n\n\n","import React from 'react';\nimport Parachains from '../../data/parachains.jsx';\nimport { n, m , Porcent } from '../../data/helpers.jsx';\nimport GlobalTvl from '../../data/globalTvl.jsx';\nimport Htvl from '../../data/Htvl.jsx';\nimport Share from '../../data/share.jsx';\nimport DailyDot from '../../data/DailyDot';\nimport Logo from '../../components/Logo';\nimport ProgressBar from '../../components/ProgressBar';\nimport Dotmarket from '../../components/Dotmarket';\nimport MarketDominance from '../../components/MarketDominance'\nimport DotContributionsFilter from '../../data/DotGroups.jsx';\nimport _ from 'lodash';\n\nexport default function CrowdloanList(data) {\n\n  const raising     = data?.raise\n  const contrib     = data?.contributions\n  const parachain   = Parachains.parachain;\n  const tvl         = data?.tvl;\n  const htvl        = data?.htvl;\n  const DotAmount   = data?.dotAmount; \n  const marketshare = [{}];\n  const binance     = data?.other;\n  let finalBinance = '';\n  if(binance) {\n    finalBinance = _.merge(_.keyBy(data?.other[0].data, 'id'), _.keyBy(data?.other[1].data, 'id'));\n  }\n\n  if(raising && contrib) {\n    const market = raising.reduce(function(sum, current) {\n      return parseInt(sum) + parseInt(current.raised);\n    }, 0);\n    const share = contrib.reduce(function(sum, current) {\n      return parseInt(sum) + parseInt(current.total);\n  }, 0)\n    marketshare.market = market;\n    marketshare.share  = share;\n    marketshare.porcent = Porcent(marketshare.share/marketshare.market);\n  }  \n\n\n  return (\n    <>\n        <div className=\"flex\">\n          <div className=\"box tvl\">\n              <h3> Total Value Locked </h3>\n              {tvl &&\n                <p className=\"giant\">\n                  ${ n(tvl.totalValue)}\n                </p>\n              }\n              {htvl &&\n                <Htvl data={htvl}/>\n              }\n              \n          </div>\n\n          <div className=\"box small\" >\n            <h3>Parallel Share of Total Market</h3>\n            <Share market={marketshare} price={tvl}/>\n          </div>  \n        </div>\n\n        <div className=\"box full \">\n          <h3>Crowdloan by Projects</h3>\n          <div className=\"selectors\">\n            <p>\n              <span><i className=\"gray\"/> Total DOT Raised </span>\n              <span><i className=\"blue\"/> Raised on Parallel </span>\n              <span><i className=\"yellow\"/> Raised on Binance </span>\n            </p>\n          </div>\n          { !raising && !binance ? 'Loading...' : \n            raising.sort((a, b) => b.raised - a.raised).filter(data => data.paraId !== \"2017\" && data.paraId !== \"2003\" && data.paraId !== \"2008\").map((index) => {\n              \n              const id = index.paraId,\n                    r  = index.raised,\n                    t  = raising[0].raised,\n                    b  = Object.values(finalBinance).filter(obj => {\n                      return obj.code === index.paraId\n                    });\n                    const dataBinance = b[0] ? b[0].votedAmount*10000000000 : 0;\n\n              return (\n\n                <div  key={id} id={id}>\n                  <div className=\"flex\">\n                    \n                    {!parachain ? 'Loading...' : parachain.filter(i => i.paraid === id).map(icon => (\n                      <Logo key={index.paraId} src={icon}/>\n                    ))}    \n\n                    {!contrib ? 'Loading...' : contrib.filter(g => g.paraId === id).map(graph => {\n                      const gTotal = graph.total/r,\n                            bgTotal = dataBinance/r,\n                            rt     = r/t;\n                      return (\n                      <>\n                        <div className=\"crowdloan-by\">\n                          <ProgressBar key={index.paraId} width={rt} bar={gTotal} bar2={bgTotal}/>\n                          <div>\n                            <p className=\"marketData\">\n                              <strong> \n                                { r ? m(r) : '0' } \n                              </strong> | <span> \n                                { Porcent(gTotal) + '% (' + m(graph.total) + ')' } \n                              </span>  \n                            </p>\n                          </div>\n                        </div>\n                      </>\n                    )})}\n                    \n                  </div>\n                </div>\n                \n              )\n          } )\n          }\n        </div>\n\n        <div className=\"flex\">\n          <div className=\"box tvl auctions\" >\n            <h3>DOT Auctions <span>Total Supply: <strong>1,103,303,471 DOT</strong></span></h3>\n            <Dotmarket raise={raising} marketShare={marketshare.market}/>\n          </div>  \n          <div className=\"box small dominance-market\">\n            <h3>Market Dominance</h3>\n            {binance &&\n              <MarketDominance data={binance} share={marketshare}/>\n            }\n            </div> \n        </div>\n\n        <div className=\"box full\">\n          <h3>Crowdloan TVL</h3>\n          {tvl && \n            <GlobalTvl price={tvl} />\n          }\n        </div>\n        {DotAmount && tvl && \n          <div className=\"box full distribution\">\n            <h3>Contribution Distribution</h3>\n            \n              <DotContributionsFilter dots={DotAmount} price={tvl}/>\n          \n          </div>   \n        }\n        <div className=\"box full\">\n          <h3>Daily Increase of DOT raised during the crowdloan</h3>\n          {htvl &&\n            <DailyDot contributions={htvl}/>\n          }\n        </div>            \n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport Header         from './components/header'\nimport CrowdloanList  from './components/crowdloanList'\nimport _ from \"lodash\"\n\nimport './styles/styles.css'; \n\nfunction App() {\n  const raiseApi          = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot\"\n  const contributionsApi  = \"https://auction-service-prod.parallel.fi/crowdloan/polkadot/contributions\"\n  const tvlApi            = \"https://auction-service-prod.parallel.fi/crowdloan/total-value\"\n  const BinanceApi        = \"https://www.binance.com/bapi/earn/v1/public/lending/dot/project/home/list?\"\n  const FilterByDotAmount = \"http://localhost:3000/crowdloan/total-contribution-by-Dot\"\n  const historicalTvlAPI     = \"https://auction-service-prod.parallel.fi/crowdloan/historical-tvl\"\n\n  const [raised        , setRaised        ] = useState();\n  const [contributions , setContributions ] = useState();\n  const [tvl           , setTvl           ] = useState();\n  const [DotAmount     , setDotAmount     ] = useState();\n  const [historicalTvl , setHistoricalTvl ] = useState();\n  const [binance       , setBinance       ] = useState();\n\n  const getRaised = async () => {\n    const res = await fetch(raiseApi);\n    const responseJson = await res.json();\n\n    setRaised(responseJson)\n  }\n\n  const getContributions = async () => {\n    const res = await fetch(contributionsApi);\n    const responseJson = await res.json();\n\n    setContributions(responseJson)\n\n  }\n\n  const getTvl = async () => {\n    const res = await fetch(tvlApi);\n    const responseJson = await res.json();\n    setTvl(responseJson)\n  }\n\n  const getDotamount = async () => {\n    const res = await fetch(FilterByDotAmount);\n    const responseJson = await res.json();\n    setDotAmount(responseJson)\n  }\n\n  const getHistoricalTvl = async () => {\n    const res = await fetch(historicalTvlAPI);\n    const responseJson = await res.json();\n    setHistoricalTvl(responseJson)\n  }\n\n  const getBinance = async () => {\n    const res = await fetch(BinanceApi+\"auctioning=true\");\n    const responseJson = await res.json();\n    const res2 = await fetch(BinanceApi+\"auctioning=false\");\n    const responseJson2 = await res2.json();\n\n    setBinance([responseJson, responseJson2])\n  }\n\n\n  useEffect(()=>{\n    function load() {\n      getRaised();\n      getContributions();\n      getTvl();\n      getBinance();\n      getDotamount();\n      getHistoricalTvl();\n    }\n\n    load();\n\n\n      setInterval(() => {\n        load()\n      }, 30000)\n  \n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        { raised &&\n          <CrowdloanList raise={raised} contributions={contributions} tvl={tvl} htvl={historicalTvl} other={binance}  dotAmount={DotAmount} />\n        }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = {\n  parachain: [\n    { paraid: '2000', name: 'Acala'                   , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/acala-circle.svg' },\n    { paraid: '2004', name: 'Moonbeam'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/moonbeam.png' },\n    { paraid: '2006', name: 'Astar'                   , icon: 'https://astar.network/images/brand-logo-mark.png' },\n    { paraid: '2012', name: 'Parallel Finance'        , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/fearless-utils/crowdloan/icons/parallel.svg' },\n    { paraid: '2015', name: 'Manta Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/manta.png' },\n    { paraid: '2002', name: 'Clover Network'          , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/clover.svg' },\n    { paraid: '2013', name: 'Litentry'                , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/litentry.png' },\n    { paraid: '2018', name: 'SubDao'                  , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/subdao.png' },\n    { paraid: '2017', name: '2017'                    , icon: 'https://crowdloan.parallel.fi/static/media/polkadot.7e142f48.svg' },\n    { paraid: '2001', name: 'Bifrost'                 , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/bifrost.svg' },\n    { paraid: '107' , name: 'Centrifuge'              , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/centrifuge.png' },\n    { paraid: '2008', name: 'Crust Network'           , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/crust.svg' },\n    { paraid: '108' , name: 'Darwinia Network'        , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/nodes/darwinia.png' },\n    { paraid: '1012', name: 'Efinity'                 , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/fearless-utils/crowdloan/icons/efinity.png' },\n    { paraid: '109' , name: 'Equilibrium'             , icon: 'https://cdn.jsdelivr.net/gh/polkadot-js/apps/packages/apps-config/src/ui/logos/chains/equilibrium.svg' },\n    { paraid: '2021', name: 'Efinity'                 , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/auction-toolkit@main/icons/chains/efinity.png' },\n    { paraid: '2028', name: 'Ares Protocol'           , icon: 'https://cdn.jsdelivr.net/gh/parallel-finance/auction-toolkit@main/icons/chains/ares.svg' }\n  ]\n};"],"sourceRoot":""}